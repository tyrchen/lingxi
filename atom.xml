<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[觅珠人]]></title>
  <link href="http://tyrchen.github.com/lingxi/atom.xml" rel="self"/>
  <link href="http://tyrchen.github.com/lingxi/"/>
  <updated>2012-12-24T09:24:27+08:00</updated>
  <id>http://tyrchen.github.com/lingxi/</id>
  <author>
    <name><![CDATA[Tyr Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meteor基础入门]]></title>
    <link href="http://tyrchen.github.com/lingxi/blog/2012/12/21/meteor-basics/"/>
    <updated>2012-12-21T08:55:00+08:00</updated>
    <id>http://tyrchen.github.com/lingxi/blog/2012/12/21/meteor-basics</id>
    <content type="html"><![CDATA[<h2>安装</h2>

<h3>安装nodejs</h3>

<p>可以通过<code>brew install nodejs</code> 或 <code>sudo apt-get install nodejs</code> 安装。不过版本也许不是最新的，所以建议到 <a href="http://nodejs.org/download/">http://nodejs.org/download/</a> 直接下载对应系统下的安装包。如果你是windows的用户，我想说，接下来的旅程对你而言将是无尽的折腾，我要是你，要么合上笔记本，远离这篇文章；要么咬咬牙，卖半个肾，去搞台mbp回来。</p>

<!-- more -->


<p>安装完成后， 测试一下版本号：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tchen@tchen-mbp:~$ node -v
</span><span class='line'>v0.8.5
</span><span class='line'>tchen@tchen-mbp:~$ npm -v
</span><span class='line'>1.1.59</span></code></pre></td></tr></table></div></figure>


<p>最新的meteor需要nodejs 0.8.x版本支持。</p>

<h3>安装mongodb</h3>

<p>Meteor目前的版本与mongodb紧密绑定，所以你需要安装mongodb（<a href="http://baike.baidu.com/view/3385614.htm">mongodb是什么？</a>）。建议去官网下载最新版本安装：
<a href="http://www.mongodb.org/downloads">http://www.mongodb.org/downloads</a>。</p>

<p>安装完成后，可以用 <code>mongod</code> 命令启动数据库服务器，用 <code>mongo</code> 命令打开命令行界面访问mongodb。</p>

<h3>安装Meteor</h3>

<p>Meteor的安装很简单，通过如下命令就可以安装一个官方的最新稳定版本：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl https://install.meteor.com | /bin/sh</span></code></pre></td></tr></table></div></figure>


<p>如果你和我一样，喜欢cutting edge的刺激，可以 <code>clone</code> meteor的repo，并切换至devel branch，然后安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://github.com/meteor/meteor.git
</span><span class='line'>$ cd meteor
</span><span class='line'>$ git checkout devel
</span><span class='line'>$ sudo ./install.sh</span></code></pre></td></tr></table></div></figure>


<p>安装脚本会先下载dependency kit，然后安装整个framework。</p>

<h2>第一个项目</h2>

<h3>创建</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor create meteor-example
</span><span class='line'>meteor-example: created.
</span><span class='line'>
</span><span class='line'>To run your new app:
</span><span class='line'>   cd meteor-example
</span><span class='line'>   meteor
</span><span class='line'>$ cd meteor-example
</span><span class='line'>$ meteor
</span><span class='line'>[[[[[ ~/projects/meteor-example ]]]]]
</span><span class='line'>
</span><span class='line'>Running on: http://localhost:3000/</span></code></pre></td></tr></table></div></figure>


<p>在浏览器中打开 <a href="http://localhost:3000/">http://localhost:3000/</a> 就可以访问这个项目了。</p>

<h3>探索新建的项目</h3>

<p>进入到meteor-example目录后，<code>ls -la</code> 可以看到项目的目录结构：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls -la
</span><span class='line'>total 24
</span><span class='line'>drwxr-xr-x   6 tchen  staff   204 12 22 10:10 .
</span><span class='line'>drwxr-xr-x  47 tchen  staff  1598 12 22 10:10 ..
</span><span class='line'>drwxr-xr-x   5 tchen  staff   170 12 22 10:10 .meteor
</span><span class='line'>-rw-r--r--   1 tchen  staff    31 12 22 10:10 meteor-example.css
</span><span class='line'>-rw-r--r--   1 tchen  staff   193 12 22 10:10 meteor-example.html
</span><span class='line'>-rw-r--r--   1 tchen  staff   433 12 22 10:10 meteor-example.js</span></code></pre></td></tr></table></div></figure>


<p>其中有一个隐藏的文件夹 <code>.meteor</code>，它记载了当前项目的配置信息，运行时所需要的各种文件，以及项目的local db（第一次启动meteor的时候会自动生成）。</p>

<p>我们来看看 <code>.meteor/packages</code> 里记录了什么：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cat .meteor/packages
</span><span class='line'># Meteor packages used by this project, one per line.
</span><span class='line'>#
</span><span class='line'># 'meteor add' and 'meteor remove' will edit this file for you,
</span><span class='line'># but you can also edit it by hand.
</span><span class='line'>
</span><span class='line'>autopublish
</span><span class='line'>insecure
</span><span class='line'>preserve-inputs
</span></code></pre></td></tr></table></div></figure>


<p>这是Meteor用来进行包管理的配置文件，它记录了你的项目里用了那些packages。</p>

<ul>
<li>autopublish是一个用来自动发布服务器端collection到客户端的库。</li>
<li>insecure是一个允许客户端对服务器端publish出来的数据有全部read/write权限的库。</li>
<li>preserve-inputs比较难解释一些，它指在meteor自动更新dom时，对于form中的各种输入组件，不重新生成。具体见：<a href="http://http://docs.meteor.com/">http://http://docs.meteor.com/</a>。</li>
</ul>


<h3>Meteor命令行介绍</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor --help
</span><span class='line'>Usage: meteor [--version] [--help] &lt;command&gt; [&lt;args&gt;]
</span><span class='line'>
</span><span class='line'>With no arguments, 'meteor' runs the project in the current
</span><span class='line'>directory in local development mode. You can run it from the root
</span><span class='line'>directory of the project or from any subdirectory.
</span><span class='line'>
</span><span class='line'>Use 'meteor create &lt;name&gt;' to create a new Meteor project.
</span><span class='line'>
</span><span class='line'>Commands:
</span><span class='line'>   run        [default] Run this project in local development mode
</span><span class='line'>   create     Create a new project
</span><span class='line'>   update     Upgrade to the latest version of Meteor
</span><span class='line'>   add        Add a package to this project
</span><span class='line'>   remove     Remove a package from this project
</span><span class='line'>   list       List available packages
</span><span class='line'>   bundle     Pack this project up into a tarball
</span><span class='line'>   mongo      Connect to the Mongo database for the specified site
</span><span class='line'>   deploy     Deploy this project to Meteor
</span><span class='line'>   logs       Show logs for specified site
</span><span class='line'>   reset      Reset the project state. Erases the local database.
</span><span class='line'>
</span><span class='line'>See 'meteor help &lt;command&gt;' for details on a command.</span></code></pre></td></tr></table></div></figure>


<h4>meteor list</h4>

<p>列出meteor支持的package。注意，meteor的package（也自诩为smark package）和npm package不是一回事。meteor有自己的一套生态系统。以下所列的package都是开箱即用，用meteor add/remove安装/卸载即可。聪明如你一定会想到其实meteor add/remove就是修改 <code>.meteor/packages</code> 文件。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor list
</span><span class='line'>
</span><span class='line'>accounts-base           A user account system
</span><span class='line'>accounts-facebook       Login service for Facebook accounts
</span><span class='line'>accounts-github         Login service for Github accounts
</span><span class='line'>accounts-google         Login service for Google accounts
</span><span class='line'>accounts-password       Password support for accounts.
</span><span class='line'>accounts-twitter        Login service for Twitter accounts
</span><span class='line'>accounts-ui             Simple templates to add login widgets to an app.
</span><span class='line'>accounts-ui-unstyled    Unstyled version of login widgets
</span><span class='line'>accounts-weibo          Login service for Sina Weibo accounts
</span><span class='line'>amplify                 API for Persistant Storage, PubSub and Request
</span><span class='line'>autopublish             Automatically publish the entire database to all clients
</span><span class='line'>backbone                A minimalist client-side MVC framework
</span><span class='line'>bootstrap               UX/UI framework from Twitter
</span><span class='line'>code-prettify           Syntax highlighting of code, from Google
</span><span class='line'>coffeescript            Javascript dialect with fewer braces and semicolons
</span><span class='line'>d3                      Library for manipulating documents based on data.
</span><span class='line'>email                   Send email messages
</span><span class='line'>force-ssl               Require this application to use secure transport (HTTPS)
</span><span class='line'>handlebars              Simple semantic templating language
</span><span class='line'>htmljs                  Easy macros for generating DOM elements in Javascript
</span><span class='line'>http                    Make HTTP calls to remote servers
</span><span class='line'>insecure                Allow all database writes by default
</span><span class='line'>jquery                  Manipulate the DOM using CSS selectors
</span><span class='line'>jquery-history          pushState module from the jQuery project
</span><span class='line'>jquery-layout           Easily create arbitrary multicolumn layouts
</span><span class='line'>jquery-waypoints        Execute a function when the user scrolls past an element
</span><span class='line'>less                    The dynamic stylesheet language.
</span><span class='line'>localstorage-polyfill   Simulates the localStorage API on IE 6,7 using userData
</span><span class='line'>madewith                Made With Meteor badge
</span><span class='line'>preserve-inputs         Automatically preserve all form fields with a unique id
</span><span class='line'>showdown                Markdown-to-HTML processor
</span><span class='line'>spiderable              Makes the application crawlable to web spiders.
</span><span class='line'>stylus                  Expressive, dynamic, robust CSS.
</span><span class='line'>underscore              Collection of small helper functions: _.map, _.each, ...</span></code></pre></td></tr></table></div></figure>


<h4>meteor mongo</h4>

<p>由于meteor的db放在 <code>.meteor/local/db</code> 下，所以使用 <code>mongo</code> 命令行查看系统db找不到meteor的数据库。meteor提供了自己的mongo cli供调试使用，这条命令运行前必须保证Meteor server处于开启状态。即运行了 <code>meteor</code> 命令。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor mongo
</span><span class='line'>MongoDB shell version: 2.2.1
</span><span class='line'>connecting to: 127.0.0.1:3002/meteor
</span><span class='line'>&gt; show dbs
</span><span class='line'>local (empty)</span></code></pre></td></tr></table></div></figure>


<h3>小试牛刀</h3>

<p>我们先安装几个package，看看meteor的威力。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor add accounts-ui
</span><span class='line'>accounts-ui: Simple templates to add login widgets to an app.
</span><span class='line'>$ meteor add accounts-weibo
</span><span class='line'>accounts-weibo: Login service for Sina Weibo accounts
</span><span class='line'>$ meteor add accounts-password
</span><span class='line'>accounts-password: Password support for accounts.
</span><span class='line'>$ meteor add jquery
</span><span class='line'>jquery: Manipulate the DOM using CSS selectors
</span><span class='line'>$ meteor add bootstrap
</span><span class='line'>bootstrap: UX/UI framework from Twitter
</span><span class='line'>$ meteor add underscore
</span><span class='line'>underscore: Collection of small helper functions: _.map, _.each, ...</span></code></pre></td></tr></table></div></figure>


<p>打开项目目录下的meteor-example.html，我们给它加上bootstrap的标准菜单，并添加loginButtons这个widget（是accounts-ui中定义的）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;navbar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;navbar-inner&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">&quot;brand&quot;</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>Meteor Example<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;nav-collapse collapse&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;nav&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>{ { loginButtons } }<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  { { &gt; hello } }
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>打开浏览器，可以看到多了一个菜单，里面有一个登录按钮。点击该按钮，你会发现这个简单的项目目前已经支持weibo和邮件登录两种方式了。</p>

<h3>微博登录</h3>

<p>你需要先到 <a href="http://open.weibo.com/apps">http://open.weibo.com/apps</a> 创建你自己的微博app。将key和secret填入这里的微博接入配置窗口并按提示配置微博app，就可以使用了（大范围使用请先通过weibo app审核）。</p>

<h3>邮件登录</h3>

<p>点击 <code>create account</code>，输入邮箱和密码，创建一个账户。可以看到账号已创建，并且自动登录进来。</p>

<p>你可以继续试验登入，登出，忘记密码（注意，本地环境可能无法发送找回密码的邮件）。目前我们还没有撰写一行代码，已经有了一个完备的用户系统。</p>

<h2>深入了解</h2>

<p>如果你好奇这一切是怎么回事，那么请接着阅读。打开浏览器当前页面（http://localhost:3000）的console（建议使用chrome），尝试以下命令：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>&gt; $(document)
</span><span class='line'><span class="err">&lt;</span> [#document]
</span><span class='line'>&gt; _.max([1,2,3,4])
</span><span class='line'><span class="nt">&lt; 4</span>
</span></code></pre></td></tr></table></div></figure>


<p>神奇吧，上一步add了jquery和underscore这两个package后，你的项目已经自动包含了这两个库。接下保持在登录状态。在console中输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>&gt; Meteor.userId()
</span><span class='line'><span class="err">&lt;</span> &quot;dd0ed681-75e4-4d8c-b1fa-8b7dba8a2b16&quot;
</span><span class='line'>&gt; Meteor.user()
</span><span class='line'><span class="nt">&lt; Object</span>
</span><span class='line'><span class="na">_id:</span> <span class="err">&quot;</span><span class="na">dd0ed681-75e4-4d8c-b1fa-8b7dba8a2b16</span><span class="err">&quot;</span>
</span><span class='line'><span class="na">emails:</span> <span class="na">Array</span><span class="err">[</span><span class="na">1</span><span class="err">]</span>
</span><span class='line'><span class="na">0:</span> <span class="na">Object</span>
</span><span class='line'><span class="na">address:</span> <span class="err">&quot;</span><span class="na">a</span><span class="err">@</span><span class="na">b</span><span class="err">.</span><span class="na">com</span><span class="err">&quot;</span>
</span><span class='line'><span class="na">verified:</span> <span class="na">false</span>
</span><span class='line'><span class="na">__proto__:</span> <span class="na">Object</span>
</span><span class='line'><span class="na">length:</span> <span class="na">1</span>
</span><span class='line'><span class="na">__proto__:</span> <span class="na">Array</span><span class="err">[</span><span class="na">0</span><span class="err">]</span>
</span><span class='line'><span class="na">__proto__:</span> <span class="na">Object</span>
</span></code></pre></td></tr></table></div></figure>


<p>登出当前用户，在console中输入：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>&gt; Meteor.userId()
</span><span class='line'><span class="nt">&lt; null</span>
</span><span class='line'><span class="nt">&gt;</span> Accounts.createUser({email:&#39;e@f.com&#39;, password: &#39;123456&#39;})
</span><span class='line'><span class="nt">&lt; undefined</span> <span class="err">//</span> <span class="err">注意这个时候</span><span class="na">e</span><span class="err">@</span><span class="na">f</span><span class="err">.</span><span class="na">com</span><span class="err">已经是登录状态，见浏览器菜单栏。</span>
</span><span class='line'><span class="nt">&gt;</span> Meteor.userId()
</span><span class='line'><span class="err">&lt;</span> &quot;b9947f4f-0916-4ea9-88ea-7984b7f43875&quot;
</span><span class='line'>&gt; Meteor.logout()
</span><span class='line'>&gt; Meteor.loginWithPassword(&#39;e@f.com&#39;, &#39;123456&#39;)
</span><span class='line'><span class="nt">&lt; undefined</span> <span class="err">//</span> <span class="err">注意这个时候</span><span class="na">e</span><span class="err">@</span><span class="na">f</span><span class="err">.</span><span class="na">com</span><span class="err">又变成登录状态，见浏览器菜单栏。</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们得出如下结论：</p>

<ul>
<li>Meteor会自动将package中用于客户端的js和css加载在浏览器中。</li>
<li>accounts-* 系列组件提供了用户系统所需的绝大多数功能，并提供了一个简单的ui，供快速开发。</li>
<li>Accounts对象和Meteor对象可以对用户进行创建，登录，退出等操作。</li>
<li>Meteor实时在服务器和客户端间交换数据。无论是登入/登出，还是创建用户，在client <-> server间的roundtrip中，只有数据在传输，页面的各种元素只有在第一次加载时才传输。</li>
</ul>


<h2>Meteor中的一些概念</h2>

<h3>Collection</h3>

<p>Meteor的Collection一旦定义后，在client/server端都可以访问。在meteor-example.js里输入如下代码创建collection：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">Messages</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">Collection</span><span class="p">(</span><span class="s1">&#39;messages&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>在浏览器的console中可以访问该collection:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="nx">Messages</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">fetch</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;</span> <span class="p">[]</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">Messages</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span><span class="nx">username</span><span class="o">:</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">user</span><span class="p">().</span><span class="nx">emails</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">address</span><span class="p">,</span> <span class="nx">content</span><span class="o">:</span> <span class="s1">&#39;Hello Hanmeimei, how are you?&#39;</span><span class="p">})</span>
</span><span class='line'><span class="o">&lt;</span> <span class="s2">&quot;21354a36-ec04-4b47-8000-e01ef2267c43&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>为了有更好的显示效果，我们再加一些代码显示Messages里的内容：</p>

<p>在meteor-example.html中我们加入一个新的template：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;message&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;hero-unit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>Messages<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      { { #each messages } }
</span><span class='line'>      <span class="nt">&lt;li&gt;</span>{ { username } } says: { { content } }<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>      { {/each } }
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在body中引用它，在 <strong>{ { >hello } }</strong> 后，加入 <strong>{ { >message } }</strong>。</p>

<p>有了显示message的template，我们还需要提供数据的controller。在meteor-example.js中 if(&#8230;client)的scope中，加入新的message的controller：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Template</span><span class="p">.</span><span class="nx">message</span><span class="p">.</span><span class="nx">messages</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Messages</span><span class="p">.</span><span class="nx">find</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在看看浏览器中发生了什么变化。是滴！页面自动刷新，显示我们刚才创建的内容了。现在我们打开另外一个浏览器，进入 <a href="http://localhost:3000">http://localhost:3000</a>，用一个新的账户登录。然后在console里输入（这里建议使用firefox和chrome做测试）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="nx">Messages</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span><span class="nx">username</span><span class="o">:</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">user</span><span class="p">().</span><span class="nx">emails</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">address</span><span class="p">,</span> <span class="nx">content</span><span class="o">:</span> <span class="s1">&#39;Hi Lilei, fine, thank you. And you?&#39;</span><span class="p">})</span>
</span><span class='line'><span class="o">&lt;</span> <span class="s2">&quot;c6ec8655-4644-48b2-a6be-7a3973dd7581&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>奇迹出现了，不仅仅是当前窗口得到了更新，另外一个浏览器有了最新的消息！我们仅仅写了几行代码，就已经见到一个实时聊天系统的雏形了！</p>

<p><img src="http://tyrchen.github.com/lingxi/images/snapshots/meteor-realtime.jpg"></p>

<h3>Live Update</h3>

<p>从刚才的例子中我们已经看到了Meteor的live update的威力。任何时候，当数据发生改变的时候，Meteor会自动在客户端重新渲染改动相关的DOM。</p>

<h3>Realtime</h3>

<p>借助socket.io，Meteor在server和每个客户端间保持了一个web socket连接。当有数据发生改变时，服务器会将新的数据publish到所有的客户端。这是Meteor的基因，因此，使用Meteor的任何app都天然具备realtime的特性。</p>

<h3>MVC</h3>

<p>Meteor不算是标准的MVC framework。如果非要往上套，Collection算是Model层，Template对象算是Controller层，而View是html中的template。</p>

<h2>后记</h2>

<p>今天就先写这么多，感兴趣的童鞋可以为聊天室加一个输入界面，这样说句话不必费劲地敲代码了。本文的完整代码可以在这里下载：
<a href="http://tyrchen.github.com/lingxi/downloads/chat.tgz">chat.tgz</a>。</p>

<p>依旧例，送上小宝今日照片。</p>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121222-1.jpg"></p>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121222-2.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[进一步思考Atanasoff (Octopress client)]]></title>
    <link href="http://tyrchen.github.com/lingxi/blog/2012/12/19/atanasoff-product-flow-chart/"/>
    <updated>2012-12-19T21:57:00+08:00</updated>
    <id>http://tyrchen.github.com/lingxi/blog/2012/12/19/atanasoff-product-flow-chart</id>
    <content type="html"><![CDATA[<h2>引子</h2>

<p>Atanasoff基本的想法已经有了，接下来就是一些细节上的思考。晚上在家看小宝的同时，考虑了一下产品的主要流程。</p>

<!-- more -->


<h2>注册流程</h2>

<p>用户使用github接入后，Atanasoff需要为用户创建属于他的博客repo。</p>

<p><img src="http://tyrchen.github.com/lingxi/images/charts/atanasoff-registration.jpg"></p>

<h2>博客撰写和编辑流程</h2>

<p>博客在编辑状态时，会被置为lock状态，这是为了避免用户在不同设备之间同一时间段内编辑同一篇博文导致冲突。以后支持operational transformation后，不需要此状态。</p>

<p>博客撰写时，为避免浏览器或app崩溃，需要定期将修改保存在local storage中；并在一定时间内提交到服务器。如果客户端10分钟内没有任何改动，则提交所有更改并退出编辑状态（让其它客户端有机会进行编辑）。</p>

<p><img src="http://tyrchen.github.com/lingxi/images/charts/atanasoff-blog.jpg"></p>

<h2>小宝照片</h2>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121219.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[产品随想：octopress客户端 —— Atanasoff]]></title>
    <link href="http://tyrchen.github.com/lingxi/blog/2012/12/18/octopress-client-a-better-composition-tool/"/>
    <updated>2012-12-18T08:26:00+08:00</updated>
    <id>http://tyrchen.github.com/lingxi/blog/2012/12/18/octopress-client-a-better-composition-tool</id>
    <content type="html"><![CDATA[<h2>引子</h2>

<p>我是个懒人，记性还差。写了两篇博客后，隔了一天再写，就忘了新建博文的命令，是 <code>rake new_post</code> 还是 <code>rake new_posts</code> 来着？另外，每次写完之余，都要敲 <code>rake gen_deploy</code> 部署也总让我抓狂。平心而论，我还是非常喜欢octopress这个产品，简洁的设计，独特的思想，优雅的撰写方式和美妙的历史记录，这些都让我沉浸在其中，乐不思WP，但如果再能好那么一点点，再让我少干些重复性的劳动，一切就完美了。</p>

<p>同事见了我的博客也想搭一个，我说这不适合你，octopress只适合程序猿。回过头来我想，为什么自己的视界这么狭小？程序猿是干什么的？不就是把复杂繁重的工作交给计算机，让计算机前的人能够悠然自得么？</p>

<p>说<strong>不</strong>的程序猿不是好的产品经理。octopress已经为程序猿提供了一套 <code>rake</code> 的自动化工具。在这个基础之上，再提供一套简洁的工具让用户摆脱繁杂的设置和命令不就可以了么？是谁规定一定要搭建 <code>ruby</code> 环境才能搭建octopress博客？又是谁规定一定要会基本的 <code>git</code> 语法和 <code>shell</code> 命令才能使用octopress？</p>

<p>于是就有了接下来的思考：一个Octopress客户端。
为了行文方便，我暂且将这个产品称之为 <strong>Atanasoff</strong> [1]。我喜欢命名，因为我知道一旦一个产品有了名字，它就有了血肉，有了生命。</p>

<!-- more -->


<h2>Atanasoff</h2>

<p>Atanasoff可以让octopress的用户focus在博文的撰写，而把博客系统的搭建和维护这样tedious的任务交给Atanasoff去做。Atanasoff的用户需要有如下技能来正常使用：</p>

<ul>
<li>有基本的互联网经验，能注册和配置github.com</li>
<li>能够很快学会一种很轻量标记语言来撰写文章</li>
</ul>


<p>下面就来看看我假想中的Atanasoff如何解放用户的双手。</p>

<h3>用户注册和登录</h3>

<p>Atanasoff的用户须以github第三方登录，且创建了username.github.com.git，并将其授权给Atanasoff的github账号atanasoffr（将其添加为collaborator）。(补记：也许可以向用户要repo access的授权，这样可以直接帮用户创建repo和修改代码)</p>

<p>用户第一次注册后，服务端检查并帮用户设置为博客使用的repo，使用配置好的octopress替用户搭建博客。</p>

<h3>设置</h3>

<p>用户可以对自己的octopress博客进行简单的设置：</p>

<ul>
<li>博客基本信息</li>
<li>导航</li>
<li>插件如百度统计 / Google Analytics，duoshuo / disqus，微博秀等</li>
<li>个人域名</li>
</ul>


<h3>撰写</h3>

<p>客户端提供 <code>markdown</code> 编辑器 [2]，让用户可以轻松编辑博客。服务器和客户端保持同步，客户端的修改或者新文章的撰写都会在有网络的情况下定期同步到服务器，再由服务器push到github。</p>

<p>为方便起见，markdown编辑器提供wysiwyg功能，让用户能够随时预览撰写的内容。编辑器尽可能美丽一些，sublime text 2带的MarkdownEditor插件就是一个很好的参考对象。</p>

<p>另外，提供图片上传和文件上传功能，上传的文件按类型放在repo相应的目录下，客户端同时生成对应的markdown语句插入到文章中合适的位置，方便用户展示图片或提供下载链接。</p>

<h3>部署</h3>

<p>用户可以一键将写好的博文部署到github pages上。为性能计，部署的频率以5分钟为单位，不允许用户太频繁的部署。（因为 <code>rake gen_deploy</code> 是个相对较重的操作）。</p>

<h3>支持多种客户端</h3>

<p>Atanasoff能够支持多种客户端，并随时在这些客户端间保持同步。可以考虑先出一个对xpad [3] 友好的支持响应式设计的web版本，然后进一步用phonegap提供对xpad的支持。xphone的支持似乎意义不大，因为小屏幕似乎不太适合撰写。</p>

<h3>其他要素</h3>

<p>支持中英文的界面</p>

<h3>实现方案</h3>

<p>python / django对我而言是最佳的选择，但我会考虑尝试nodejs。</p>

<h3>背后的逻辑（随想，并不严谨）</h3>

<ul>
<li>服务端搭建合适的octopress生产环境，每个用户的repo都能正常运行 <code>rake</code> 命令。</li>
<li>当用户设置好后，clone他的repository，切换到source并检查是否有source/post，没有的话xfork [4] 出一个设置好的系统版本。</li>
<li>服务器使用socket.io推送post目录下的所有markdown文件（先考虑posts，以后考虑pages），及依据config生成的字典。</li>
<li><code>rake</code> 命令使用background task完成。</li>
<li>定期同步的文章内容可以记录在临时文件中并使用 diff / patch 的思想进行同步 [5]。由于这样的同步往往在自己的设备之间进行，不存在同时修改的情况，所以目前之版本无opertional transformation [6] 之必要。日后如有需要，可以添加 <a href="http://http://etherpad.org/">etherpad</a> 的支持。</li>
</ul>


<h3>产品用途</h3>

<ul>
<li>个人博客</li>
<li>企业博客</li>
</ul>


<h2>何时开工</h2>

<p>既然是随想，就注定它不一定能够问世。我也许会继续完善这篇文章，找到一个合适的时间去尝试做点什么。也许2013元旦假期是个不错的选择，前提是我家那混世小魔王能乖巧一些。</p>

<p>接下来我至少会做这些事情：</p>

<ul>
<li>继续完善对这个产品的思考</li>
<li>尝试用<strong>omniGraffle</strong>做个产品原型出来，做为我使用这个Mac下的visio的敲门砖</li>
<li>不断寻找合适的工具来加速产品的面世</li>
</ul>


<h2>Reference</h2>

<p>[1] 本博中假想的产品均冠以计算机科学家的名字，从A-Z依次排列。<a href="http://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E6%96%87%E6%A3%AE%E7%89%B9%C2%B7%E9%98%BF%E5%A1%94%E7%BA%B3%E7%B4%A2%E5%A4%AB">Atanasoff</a> 是第一台自动电子数字计算机的发明者。</p>

<p>[2] JS的markdown wysiwyg编辑器有很多，比如说：<a href="http://oscargodson.github.com/EpicEditor/">EpicEditor</a>。另外，<a href="http://dillinger.io/">dillinger</a> 绝对是让Atanasoff惊喜的project。</p>

<p>[3] 考虑xpad主要是因为本文实际上是在搭地铁的一个多小时里用ipad上的evernote完成。</p>

<p>[4] xfork系作者创造出来的词，即clone一个atanasoffr下配置好的repo，然后将 .<code>git/config</code> 中的内容改为用户repo的配置，再 <code>push</code>。这样能最快速地搭建出来一个博客。</p>

<p>[5] 随便google了下，似乎有 <a href="https://github.com/benjamine/JsonDiffPatch">JsonDiffPatch</a> 可以尝试</p>

<p>[6] 协同工作软件的思想基石。 参见wikipedia下的介绍：<a href="http://en.wikipedia.org/wiki/Operational_transformation">operational transformation</a></p>

<h2>后续文章</h2>

<ul>
<li><a href="http://tyrchen.github.com/lingxi/blog/2012/12/19/atanasoff-product-flow-chart/">进一步思考Atanasoff (Octopress Client)</a></li>
</ul>


<h2>小宝的照片</h2>

<p>昨日小宝洗完澡，躺着就睡着了。</p>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121217.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么是Meteor]]></title>
    <link href="http://tyrchen.github.com/lingxi/blog/2012/12/16/why-meteor/"/>
    <updated>2012-12-16T14:29:00+08:00</updated>
    <id>http://tyrchen.github.com/lingxi/blog/2012/12/16/why-meteor</id>
    <content type="html"><![CDATA[<h2>Meteor是什么？</h2>

<p>Meteor的官网( http://meteor.com )这样介绍这个框架：</p>

<blockquote><p>Meteor is an open-source platform for building top-quality web apps in a fraction of the time, whether you&#8217;re an expert developer or just getting started.</p></blockquote>

<p><strong>top-quality web apps</strong> 我们放下不表，<strong>fraction of the time</strong> 的提法很新颖，看来这个框架的目标是解放程序猿，少花时间多办事。虽然具体的演化路径我不得而知，但从网络上的各种蛛丝马迹来看，Meteor吸收了google wave, asana等平台背后的开发工具的精髓，逐渐演进出了目前的版本。Meteor的幕后团队相当强悍：他们大多毕业于MIT，是成功的创业家，也是一流的工程师，其中一个开发者还是神器 <a href="http://etherpad.net">etherpad</a> 的作者。</p>

<!-- more -->


<h3>Meteor究竟有什么NB的地方？</h3>

<p>首先，Meteor构架与nodejs之上。这使得 <strong>One Language</strong> 成为可能，同时可依托nodejs上诸如soket.io这样强大的类库内置 <strong>realtime</strong>，<strong>Date on the Wire</strong> 等特性。</p>

<p>在一种语言的基础上，Meteor统一了服务器端和客户端的数据访问，提出 <strong>Database Everywhere</strong>，一套DB API大大减轻了开发负担，不用再做server data JSON client data的转换（想想你的django 或者rails app，在这上面花了多少功夫？）。</p>

<p>为了让app达到最佳的用户体验，Meteor还提供了 <strong>Latency Compensation</strong>，客户端对数据的更新即时反应到UI，如果更新被服务器reject，再rollback。大多数情况下，用户会得到极佳的类似本地数据库的体验。</p>

<p>Meteor最让人叫绝的是其 <strong>Full Stack Reactivity</strong>。关于reactivity programming的详细介绍，请参考 <a href="http://en.wikipedia.org/wiki/Reactive_programming">Reactivity Programming</a>，这里不展开。简言之，当数据发生改变的时候，所有依赖该数据的地方自动发生相应的改变。</p>

<p>用过backbone的同学都知道，当model发生改变的时候，我们需要通过注册相应的事件，显式更新对应的DOM，如果数据在页面中多处被渲染，则每处对应的DOM需挨个更新。</p>

<p>ember在backbone的思想上更近了一大步，通过内置的data binding API，让数据和DOM能够双向绑定，程序猿不用再花心思去考虑DOM的更新。然而，蹩脚的API调用（所有对binding的数据的访问需要通过getter和setter，你懂的）和DOM中无处不在的script垃圾让ember既不简约也不优雅。</p>

<p>而Meteor则另辟蹊跷，通过reactivity context和dependency巧妙地支持了reactivity（据作者说核心代码就几十行），使用者几乎感受不到代码的变化。</p>

<p>Meteor另一个很贴心的点是零部署。开发web app有点小头疼的点是打包和部署。比如说，把less转成css，coffee转成javascript，然后混淆，压缩，虽然有些自动化的工具可以简化这部分工作，可还免不了相应的配置和一些脚本工作。在开发环境下，meteor会自动替你加载js/css，如果你使用了coffee/less (sass)，只要add了相应的smart package，meteor会自动帮你处理；开发完毕后要部署，只需要运行 <code>meteor bundle</code>，系统自动会将相关的资源打包，只要目标系统上有相应版本的nodejs，meteor和mongodb，就能运行一个标准的production版本。</p>

<p>以下是meteor官网上的介绍，当你真正使用meteor后，会发现还真不是吹牛。</p>

<blockquote><h2>Seven Principles of Meteor</h2>

<ol>
<li><p>Data on the Wire. Don&#8217;t send HTML over the network. Send data and let the client decide how to render it.</p></li>
<li><p>One Language. Write both the client and the server parts of your interface in JavaScript.</p></li>
<li><p>Database Everywhere. Use the same transparent API to access your database from the client or the server.</p></li>
<li><p>Latency Compensation. On the client, use prefetching and model simulation to make it look like you have a zero-latency connection to the database.</p></li>
<li><p>Full Stack Reactivity. Make realtime the default. All layers, from database to template, should make an event-driven interface available.</p></li>
<li><p>Embrace the Ecosystem. Meteor is open source and integrates, rather than replaces, existing open source tools and frameworks.
Simplicity Equals Productivity. The best way to make something seem simple is to have it actually be simple. Accomplish this through clean, classically beautiful APIs.</p></li>
</ol>
</blockquote>

<h2>Meteor入门范例</h2>

<p>废话说那么多，是骡子是马，不如拿出来溜溜。以下是meteor create &#8211;example leaderboard产生的代码，很好懂，借花献佛。先看DOM结构，meteor目前仅支持 <a href="http://http://handlebarsjs.com/">handlebar</a> 做为template engine。</p>

<figure class='code'><figcaption><span> (leaderboard.html)</span> <a href='http://tyrchen.github.com/lingxi/downloads/code/leaderboard.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Leaderboard<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;outer&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    {{&gt; leaderboard}}
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;leaderboard&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;leaderboard&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    {{#each players}}
</span><span class='line'>      {{&gt; player}}
</span><span class='line'>    {{/each}}
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  {{#if selected_name}}
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;details&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>{{selected_name}}<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">class=</span><span class="s">&quot;inc&quot;</span> <span class="na">value=</span><span class="s">&quot;Give 5 points&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  {{/if}}
</span><span class='line'>  {{#unless selected_name}}
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;none&quot;</span><span class="nt">&gt;</span>Click a player to select<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  {{/unless}}
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;player&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;player {{selected}}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>{{name}}<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;score&quot;</span><span class="nt">&gt;</span>{{score}}<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以看到html被简化了不少，不用显式应用js/css。这段代码很好懂。再看看javascript，也是leaderboard的核心功能。javascript文件主要实现了template的事件及数据的CRUD。</p>

<figure class='code'><figcaption><span> (leaderboard.js)</span> <a href='http://tyrchen.github.com/lingxi/downloads/code/leaderboard.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// Set up a collection to contain player information. On the server,</span>
</span><span class='line'><span class="c1">// it is backed by a MongoDB collection named &quot;players&quot;.</span>
</span><span class='line'><span class="nx">Players</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Meteor</span><span class="p">.</span><span class="nx">Collection</span><span class="p">(</span><span class="s2">&quot;players&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">Meteor</span><span class="p">.</span><span class="nx">isClient</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">leaderboard</span><span class="p">.</span><span class="nx">players</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Players</span><span class="p">.</span><span class="nx">find</span><span class="p">({},</span> <span class="p">{</span><span class="nx">sort</span><span class="o">:</span> <span class="p">{</span><span class="nx">score</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="mi">1</span><span class="p">}});</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">leaderboard</span><span class="p">.</span><span class="nx">selected_name</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">player</span> <span class="o">=</span> <span class="nx">Players</span><span class="p">.</span><span class="nx">findOne</span><span class="p">(</span><span class="nx">Session</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;selected_player&quot;</span><span class="p">));</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">player</span> <span class="o">&amp;&amp;</span> <span class="nx">player</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">player</span><span class="p">.</span><span class="nx">selected</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">Session</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="s2">&quot;selected_player&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_id</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;selected&quot;</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">leaderboard</span><span class="p">.</span><span class="nx">events</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;click input.inc&#39;</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Players</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">Session</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;selected_player&quot;</span><span class="p">),</span> <span class="p">{</span><span class="nx">$inc</span><span class="o">:</span> <span class="p">{</span><span class="nx">score</span><span class="o">:</span> <span class="mi">5</span><span class="p">}});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">Template</span><span class="p">.</span><span class="nx">player</span><span class="p">.</span><span class="nx">events</span><span class="p">({</span>
</span><span class='line'>    <span class="s1">&#39;click&#39;</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">Session</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&quot;selected_player&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">_id</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// On server startup, create some players if the database is empty.</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">Meteor</span><span class="p">.</span><span class="nx">isServer</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Meteor</span><span class="p">.</span><span class="nx">startup</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">Players</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">count</span><span class="p">()</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">names</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;Ada Lovelace&quot;</span><span class="p">,</span>
</span><span class='line'>                   <span class="s2">&quot;Grace Hopper&quot;</span><span class="p">,</span>
</span><span class='line'>                   <span class="s2">&quot;Marie Curie&quot;</span><span class="p">,</span>
</span><span class='line'>                   <span class="s2">&quot;Carl Friedrich Gauss&quot;</span><span class="p">,</span>
</span><span class='line'>                   <span class="s2">&quot;Nikola Tesla&quot;</span><span class="p">,</span>
</span><span class='line'>                   <span class="s2">&quot;Claude Shannon&quot;</span><span class="p">];</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">names</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">Players</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span> <span class="nx">names</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span> <span class="nx">score</span><span class="o">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">*</span><span class="mi">5</span><span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>不到50行代码，提供了从model创建与fixture setup，到渲染模版和事件处理。想想用现有的任何一个框架，实现同样的功能，需要多少代码？</p>

<p>要运行以上范例，安装好meteor后，仅需：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ meteor create --example leaderboard
</span><span class='line'>$ cd leaderboard
</span><span class='line'>$ meteor</span></code></pre></td></tr></table></div></figure>


<p>然后打开浏览器，访问：http://localhost:3000。</p>

<h2>敬请期待</h2>

<p>从meteor 0.3.8版本开始学习和使用，到目前的0.5.2，我对meteor虽不敢说已经通盘掌握，也能够做一些稍微复杂的项目。接下来我会撰写一系列的文章，从本文提到的例子leaderboard的增强版开始，由浅入深，探讨如何通过学习meteor的架构和API，使用meteor做一些有意思的项目。</p>

<p>大纲如下：</p>

<ul>
<li><strong>Meteor入门指南 - 如何安装，基本元素和包管理</strong> &#8211; 2012.12.23前</li>
<li><strong>第一个Meteor App: 正字系统（leaderboard变种）</strong> &#8211; 2012.12.30前</li>
<li><strong>Meteor的权限和用户账号系统</strong> &#8211; 2013.01.06前</li>
<li><strong>将Meteor部署到自己的服务器</strong> &#8211; 2013.01.13前</li>
</ul>


<h2>Reference</h2>

<ol>
<li><a href="http://meteor.com">http://meteor.com</a></li>
<li><a href="http://docs.meteor.com">Meteor文档</a></li>
<li><a href="https://trello.com/board/meteor-roadmap/508721606e02bb9d570016ae">Meteor Roadmap</a></li>
</ol>


<h2>小宝的照片</h2>

<p>依旧例，还是上一张小宝的当天照片以飨读者。</p>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121216-1.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第一篇博客: 用octopress搭建博客系统]]></title>
    <link href="http://tyrchen.github.com/lingxi/blog/2012/12/16/first-blog/"/>
    <updated>2012-12-16T04:15:00+08:00</updated>
    <id>http://tyrchen.github.com/lingxi/blog/2012/12/16/first-blog</id>
    <content type="html"><![CDATA[<h2>引子</h2>

<p>夜夜哭闹的混世小魔王在她满月的这天好像突然换了个人，一觉又一觉地睡。这可苦了我，一个月来建立的夜间作息倾刻间紊乱，她没有闹觉的时间里，我却丢了魂一样，怎么也睡不着。于是起身想折腾点什么，无意间看到了derbyjs的 <a href="http://blog.derbyjs.com" title="Derby JS">blog</a> 是github pages支持的，遂产生了兴趣，挽起袖子就开始折腾一个自己的。虽然 <a href="http://octopress.org" title="Octopress">octopress</a>的文档写得很清晰，但对于第一次接触这个博客系统的人来讲，还是有一些拦路虎的。2012年12月16日凌晨4:15，当我的第一篇空的博客展现在 <a href="tyrchen.github.com">tyrchen.github.com</a> 时，我终于累瘫在床上。</p>

<p>早上9时，我翻身起来撰写此文，算是给自己折腾的那一个多小时时间一个交代吧。</p>

<p>免责声明：如果你不知道什么是shell, github, 不能很快地掌握一种非常简单的标记语言(markdown)，那么本文不适合你。类似于 <a href="http://wordpress.com">wordpress</a> 所见即所得的博客系统对你更有价值。<a href="http://octopress.org" title="Octopress">octopress</a>适合于黑客。</p>

<!-- more -->


<h2>什么是github pages?</h2>

<p>开源项目需要sell自己。项目的介绍，帮助和API文档都是很好的宣传工具。在没有github pages的日子里，项目只能自建站点或者使用第三方来存放能让用户立即阅读的文档。github看到了这一需求，将一个静态页面hosting的系统巧妙地与github本身结合起来，通过一个特殊的branch (gh-pages) 为项目提供文档hosting。除此之外，个人也有branding自己的需求，于是，只要你创建一个名为 yourname.github.com 的repository，github会自动为其提供同域名的hosting服务。</p>

<p>更多有关github pages的文档，见：<a href="http://pages.github.com/">http://pages.github.com/</a>。</p>

<h2>为什么用github pages?</h2>

<p>用github pages搭建博客，你可以享受到免费的服务器，免费的流量和相对不错的服务体验。另外，这是一种搭建博客的全新体验，不用数据库，一切改动都由git追踪，随时随地查看你的博文历史，近乎0成本迁移到任意服务器。动心了么？读下去吧。</p>

<h2>什么是octopress?</h2>

<p>octopress提供了一组自动化的工具和模版帮助用户简化博客系统的创建。octopress生成的博客系统可以被方便地部署到github pages及heroku，当然，由于生成的是静态文件，你也可以将其部署到任何一个你自己的vhost或server。</p>

<p>octopress的安装文档见：<a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a>。本文接下来的部分会详细介绍如何用github pages和octopress部署一个自己的博客，及简单介绍如何进行写作。</p>

<h2>安装</h2>

<h3>创建repository</h3>

<p>在你的github账号下创建名为yourname.github.com的repository。注意，不要创建成yourname。创建好后留待后用。</p>

<h3>安装ruby 1.9.3</h3>

<p>如果你的系统中没有ruby或者 <code>ruby --version</code> 的版本不是1.9.3，请使用 <a href="https://rvm.io/rvm/install/">rvm</a> 或者你熟悉的version manager安装1.9.3.</p>

<p>使用rvm安装ruby 1.9.3:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm install 1.9.3
</span><span class='line'>$ rvm use 1.9.3
</span><span class='line'>$ ruby --version
</span><span class='line'>ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-darwin12.2.0]</span></code></pre></td></tr></table></div></figure>


<h3>设置octopress</h3>

<h4>安装依赖</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>$ cd octopress    # 使用rvm时，系统会自动切换到1.9.3，第一次使用会提示是否trust .rvmrc，请输入yes
</span><span class='line'>$ gem install bundler
</span><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<p>如果在这一步有任何问题，请查阅ruby手册或google报错信息。</p>

<h4>安装缺省的模版</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake install</span></code></pre></td></tr></table></div></figure>


<h4>设置博客使用的repository</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages
</span><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.com)
</span><span class='line'>Repository url: </span></code></pre></td></tr></table></div></figure>


<p>请输入：<code>git@github.com:yourname/yourname.github.com.git</code> (将yourname替换成你的github登录名)</p>

<p>这个步骤rake会做很多事情：</p>

<ol>
<li>在.git/config中替换origin为你输入的repository，并把原来的origin写到octopress中。</li>
<li>创建新的branch source并切换到这个branch。</li>
<li>在生成的_deploy目录下，初始化git repository为你的repository。</li>
</ol>


<p>以下是两个git config的内容，just for your information。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tchen@tchen-mbp:~/projects/octopress$ cat .git/config 
</span><span class='line'>[core]
</span><span class='line'>  repositoryformatversion = 0
</span><span class='line'>  filemode = true
</span><span class='line'>  bare = false
</span><span class='line'>  logallrefupdates = true
</span><span class='line'>  ignorecase = true
</span><span class='line'>[remote "octopress"]
</span><span class='line'>  url = git://github.com/imathis/octopress.git
</span><span class='line'>  fetch = +refs/heads/*:refs/remotes/octopress/*
</span><span class='line'>[branch "source"]
</span><span class='line'>  remote = origin
</span><span class='line'>  merge = refs/heads/master
</span><span class='line'>  rebase = true
</span><span class='line'>[remote "origin"]
</span><span class='line'>  url = git@github.com:tyrchen/tyrchen.github.com.git
</span><span class='line'>  fetch = +refs/heads/*:refs/remotes/origin/*</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tchen@tchen-mbp:~/projects/octopress$ cat _deploy/.git/config 
</span><span class='line'>[core]
</span><span class='line'>  repositoryformatversion = 0
</span><span class='line'>  filemode = true
</span><span class='line'>  bare = false
</span><span class='line'>  logallrefupdates = true
</span><span class='line'>  ignorecase = true
</span><span class='line'>[remote "origin"]
</span><span class='line'>  url = git@github.com:tyrchen/tyrchen.github.com.git
</span><span class='line'>  fetch = +refs/heads/*:refs/remotes/origin/*
</span></code></pre></td></tr></table></div></figure>


<h4>创建博文</h4>

<p>接下来可以试试创建一个新的博文：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_post["My first blog"]</span></code></pre></td></tr></table></div></figure>


<p>这会在source/_posts下创建一个以时间和标题为名称的markdown文件，它就是你的第一篇博文。</p>

<p>使用：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<p>rake会启动一个server，打开浏览器访问 <a href="http://localhost:4000">http://localhost:4000</a> 可以看到你的最新更改。</p>

<h4>部署你的博客</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>这个命令会把_deploy下的内容重新生成一遍，然后提交到你的repository。如果一切顺利，10分钟左右就可以通过 <a href="http://yourname.github.com">http://yourname.github.com</a> 访问你的博客了。</p>

<h4>保存你的更改</h4>

<p>欢喜之余，不要忘记提交你的源文件。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git add .
</span><span class='line'>$ git commit -m "Source code of my blog"
</span><span class='line'>$ git push origin source</span></code></pre></td></tr></table></div></figure>


<p>你的repository会多一个source目录，记载所有的源文件。</p>

<h4>撰写博文</h4>

<p>博客系统搭建好之后，如何撰写博文呢？通过之前的步骤想必你对octopress的精髓有所了解，yes，没有所见即所得的编辑器让你撰写博文，你要做的是使用 <code>rake new_post</code> 命令创建一篇新的文章，然后使用称手的markdown编辑器进行编辑即可。可选择的markdown编辑器很多，vim，sublime text 2，textmate 2等等。我个人喜欢在osx下使用sublime text 2。（需要安装Markdown Edit，不会安装？？请google ^_^ ）</p>

<p>基本的语法我就不多说了，浪费篇幅。看看这篇博文的源文件，你就掌握了markdown的大部分用法。（如果你第一反应是 鼠标右键->查看源文件，那么我被你打败了，我说的是markdown的源文件 ^_^ ）</p>

<p>还是不知道怎么看？好吧，<a href="https://raw.github.com/tyrchen/tyrchen.github.com/source/source/_posts/2012-12-16-first-blog.markdown">猛击这个链接</a></p>

<h2>个性化</h2>

<h3>添加个人域名</h3>

<p>在octopress目录下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo 'blog.yourdomain.com' &gt;&gt; source/CNAME</span></code></pre></td></tr></table></div></figure>


<p>然后在你的DNS服务商，如 <a href="http://dnspod.cn">dnspod.cn</a>，添加相应的CNAME指向 yourname.github.com。如果你要使用顶级域名，如 <code>http://yourdomain.com</code> 访问你的博客，则需要使用A记录指向 <code>207.97.227.245</code>。详细内容请参考：<a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a>。</p>

<h3>设置博客</h3>

<p>打开<code>_config.yml</code>，按照 <a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a> 的说明进行设置即可。注意把不需要的asides都删除，免得加载不必要的js，拖累访问速度。如果想把你自己的微博个人秀加在侧栏，请参考：<a href="http://clark1231.iteye.com/blog/1553939">http://clark1231.iteye.com/blog/1553939</a>。</p>

<h3>使用主题</h3>

<p>本文使用了 <a href="https://github.com/amelandri/darkstripes">https://github.com/amelandri/darkstripes</a> 的主题。使用方法很简单：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd octopress
</span><span class='line'>$ git clone git://github.com/amelandri/darkstripes.git .themes/darkstripes
</span><span class='line'>$ rake install['darkstripes']
</span><span class='line'>$ rake generate</span></code></pre></td></tr></table></div></figure>


<p>注意你对已有主题的汉化会被覆盖，请确保提交所有更改前你merge了你的改动。</p>

<h3>添加多说</h3>

<p>由于github pages只支持静态文件，所以类似评论这样的功能就只能使用第三方工具。octopress自带disqus的评论系统，但其对国内用户不够友好，另外加载速度也不快。国内disqus的copycat是duoshuo，于是照猫画虎，添加多说的支持进来：</p>

<p>首先在 <code>source/post/</code> 下创建duoshuo.html:</p>

<figure class='code'><figcaption><span>duoshuo.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.duoshuo_name %}
</span><span class='line'><span class="c">&lt;!-- Duoshuo Comment BEGIN --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;ds-thread&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">duoshuoQuery</span> <span class="o">=</span> <span class="p">{</span><span class="nx">short_name</span><span class="o">:</span><span class="s2">&quot;{{ site.duoshuo_name }}&quot;</span><span class="p">};</span>
</span><span class='line'>  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">ds</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">ds</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span><span class="nx">ds</span><span class="p">.</span><span class="nx">async</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">ds</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;http://static.duoshuo.com/embed.js&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">ds</span><span class="p">.</span><span class="nx">charset</span> <span class="o">=</span> <span class="s1">&#39;UTF-8&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;head&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>      <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">ds</span><span class="p">);</span>
</span><span class='line'>  <span class="p">})();</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!-- Duoshuo Comment END --&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>然后在 <code>source/_layouts/post.html</code>，将对应的disqus代码改为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>{% if site.duoshuo_name and page.comments == true %}
</span><span class='line'>  <span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">&quot;comment&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h1&gt;</span>发表评论<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>    {% include post/duoshuo.html %}
</span><span class='line'>  <span class="nt">&lt;/section&gt;</span>
</span><span class='line'>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>在 <code>source/_config.yml</code> 里，添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Duoshuo comments</span>
</span><span class='line'><span class="l-Scalar-Plain">duoshuo_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">your_duoshuo_name</span>
</span></code></pre></td></tr></table></div></figure>


<p>应该就可以了。可以使用如下命令测试：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ rake generate</span>
</span><span class='line'><span class="l-Scalar-Plain">$ rake preview</span>
</span></code></pre></td></tr></table></div></figure>


<h3>添加百度统计</h3>

<p>百度统计可以将生成的script直接添加到 <code>source/post/after_footer.html</code> 就可以。很简单，这里就不详述。</p>

<h3>更新中</h3>

<p>本博文会不断修改，不断更新。作者会尽量保持这篇博文和其使用的博客系统保持文档上的一致。</p>

<h2>后记</h2>

<p>断断续续写了两个小时，期间还哄了下满月的小宝，拍下了一堆她满月的照片，选一张出来，算是对你耐心读完本文的奖励：</p>

<p><img src="http://tyrchen.github.com/lingxi/images/photos/baby20121216.jpg"></p>
]]></content>
  </entry>
  
</feed>
